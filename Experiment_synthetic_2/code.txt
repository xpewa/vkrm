import bpy
import os
import math
import bpy_extras
from mathutils import Matrix
from math import radians

# --- Конфигурация ---
output_dir_material1 = "/home/xpewa/CLionProjects/vkrm/Experiment_synthetic_2"
output_dir_material2 = "/home/xpewa/CLionProjects/vkrm/Experiment_synthetic_2/mask"

# Пути для сохранения текстовых файлов
output_dir_txt = "/home/xpewa/CLionProjects/vkrm/Experiment_synthetic_2"

# Имена объектов
ball_name = "МСфера"
camera_name = "Camera"

# Имена материалов
material1_name = "Material.001"
material2_name = "Material.002"

# Диапазон значений и шаг
start_pos_x = -0.5
end_pos_x = 0.5
step_x = 0.1
start_pos_y = -0.3
end_pos_y = 0.3
step_y = 0.1
start_pos_z = -2.0
end_pos_z = -3.0
step_z = -0.1

# --- Функция для создания директории, если её нет ---
def create_directory(directory):
    if not os.path.exists(directory):
        os.makedirs(directory)

# --- Функция для записи данных в файл ---
def write_data_to_file(filepath, data):
    with open(filepath, "w") as f:
        f.write(data)

# --- Основной цикл ---
# Ensure directories exist
create_directory(output_dir_material1)
create_directory(output_dir_material2)
create_directory(output_dir_txt)

filepath_ball_center = os.path.join(output_dir_txt, "ball_center.txt")
filepath_camera_data = os.path.join(output_dir_txt, "camera_data.txt")
filepath_ball_position = os.path.join(output_dir_txt, "ball_position.txt")

# Получаем объекты
ball = bpy.data.objects[ball_name]
camera = bpy.data.objects[camera_name]

number_step = 1

# Перебор координат
for x in range(int((end_pos_x - start_pos_x) / step_x) + 1):
    x_val = start_pos_x + x * step_x
    for y in range(int((end_pos_y - start_pos_y) / step_y) + 1):
        y_val = start_pos_y + y * step_y
        for z in range(int((end_pos_z - start_pos_z) / step_z) + 1):
            z_val = start_pos_z + z * step_z

            # Задаем положение мяча
            ball.location = (x_val, y_val, z_val)

            # --- Материал 1 ---
            ball.active_material = bpy.data.materials[material1_name]
            # Формируем имя файла для изображения
            filename_material1 = f"Image_{number_step}.png"
            filepath_material1 = os.path.join(output_dir_material1, filename_material1)
            # Рендерим и сохраняем
            bpy.context.scene.render.filepath = filepath_material1
            bpy.ops.render.render(write_still=True)

            # --- Материал 2 ---
            ball.active_material = bpy.data.materials[material2_name]
            filename_material2 = f"Image_{number_step}.png"
            filepath_material2 = os.path.join(output_dir_material2, filename_material2)
            bpy.context.scene.render.filepath = filepath_material2
            bpy.ops.render.render(write_still=True)

            # --- Запись данных в текстовые файлы ---
            # 1. Центр мяча (в пикселях) - спроецированный на изображение
            # Получаем 2D координаты центра мяча
            scene = bpy.context.scene
            cam = scene.camera
            obj = ball
            
            depsgraph = bpy.context.evaluated_depsgraph_get()
            obj_eval = obj.evaluated_get(depsgraph)
            cam = bpy.context.scene.camera

            co_world = obj_eval.location
            co_camera = bpy_extras.object_utils.world_to_camera_view(
                bpy.context.scene, cam, co_world
            )
             
            # Преобразование в пиксельные координаты
            render_scale = bpy.context.scene.render.resolution_percentage / 100.0
            render_size = (
                int(bpy.context.scene.render.resolution_x * render_scale),
                int(bpy.context.scene.render.resolution_y * render_scale),
            )
             
            pixel_coords = (
                int(co_camera.x * render_size[0]),
                int(render_size[1] - co_camera.y * render_size[1]),
            )
            ball_center_2d = f"{int(pixel_coords[0])} {int(pixel_coords[1])}\n"

            # 2. Ориентация и положение камеры
            camera_rotation = [math.degrees(x) for x in camera.rotation_euler] # Преобразуем в градусы
            camera_position = camera.location
            camera_data = f"{camera_rotation[0]:.0f} {camera_rotation[1]:.0f} {camera_rotation[2]:.0f} {camera_position[0]:.0f} {camera_position[1]:.0f} {camera_position[2]:.0f}\n"

            # 3. Положение мяча (x, y, z)
            ball_position_data = f"{x_val:.2f} {y_val:.2f} {z_val:.2f}\n"

            # Записываем данные
            with open(filepath_ball_center, "a") as f:
                f.write(ball_center_2d)
            with open(filepath_camera_data, "a") as f:
                f.write(camera_data)
            with open(filepath_ball_position, "a") as f:
                f.write(ball_position_data)
            
            number_step = number_step + 1

print("Скрипт завершен!")
